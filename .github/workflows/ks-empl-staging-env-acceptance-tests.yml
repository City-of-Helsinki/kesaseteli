name: KesÃ¤seteli Staging Environment Acceptance tests
on:
  schedule:
    # At half past every hour from 7-20 (finnish winter time)
    - cron: "*/30 5-18 * * *"
  pull_request:
    paths:
      - '.github/workflows/ks-empl-staging-env-acceptance-tests.yml'
env:
  EMPLOYER_URL: https://yjdh-kesaseteli-ui-stg.apps.platta.hel.fi
  BRANCH: main
jobs:
  acceptance-tests:
    if: ${{ false }} # Disabled until staging is not behind vpn anymore
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    name: Acceptance tests for Staging Environment
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{env.BRANCH}}
      - run: |
          echo "COMMIT_INFO=$(git log -1 --pretty=format:'%h%x09%an%x09%ad%x09%s')" >> $GITHUB_ENV
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.4.1
        with:
          node-version: '14'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn --prefer-offline --frozen-lockfile --check-files --production=false
      - name: Run TestCafe tests for Staging
        id: testcafe
        run: yarn --cwd kesaseteli/employer browser-test:ci
        env:
          GITHUB_WORKFLOW_NAME: ${{  github.workflow }}
          GITHUB_WORKFLOW_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          TESTCAFE_SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          TESTCAFE_SLACK_CHANNEL: "#yjdh-alerts"
          TESTCAFE_SLACK_USERNAME: GitHub-Alerts
          FRONTEND_URL: ${{ env.EMPLOYER_URL }}
      - name: Upload results
        run: |
          zip -r report.zip kesaseteli/employer/report/ > no_output 2>&1
          curl -s -H "Content-Type: application/zip" -H "Authorization: Bearer ${{secrets.NETLIFY_AUTH_TOKEN}}" --data-binary "@report.zip" https://api.netlify.com/api/v1/sites > response.json
          echo "REPORT_URL=$(cat response.json|python -c "import sys, json; print('https://' + json.load(sys.stdin)['subdomain'] + '.netlify.com')")" >> $GITHUB_ENV
        if: always() && steps.testcafe.outcome == 'failure'
      - name: link screenshots url to slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_USERNAME: GitHub-Alerts
          SLACK_TITLE: ${{ github.workflow }} have *FAILED* in ${{env.EMPLOYER_URL}}!
          SLACK_CHANNEL: yjdh-alerts
          SLACK_MESSAGE: |
            *Check the testcafe report here: ${{env.REPORT_URL}}*
            The latest fetched commit on _${{env.BRANCH}}_-branch was:
            ```${{ env.COMMIT_INFO }}```
            *NOTE*: There is a chance that it was not yet deployed!
        if: always() && steps.testcafe.outcome == 'failure'
      - name: Create zip of screenshots and videos of failed tests to artifact for ${{env.EMPLOYER_URL}}
        uses: actions/upload-artifact@v2
        with:
          name: report
          path: ./frontend/kesaseteli/employer/report
        if: always() && steps.testcafe.outcome == 'failure'
